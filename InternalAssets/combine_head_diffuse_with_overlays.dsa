// DAZ Studio version 4.22.0.15 filetype DAZ Script
// combine_head_diffuse_with_overlays.dsa

var includeDir_oFILE = new DzFile( getScriptFileName() );
var sIncludePath = includeDir_oFILE.path();
//var sIncludePath = "c:/Github/DazToRoblox-daz3d/PluginData";

// overlay textures with alpha channels
var overlayTexture1 = sIncludePath + "/g9 eyebrows thin.png";
//var overlayTexture1 = sIncludePath + "/g9 eyebrows thick.png";
//var overlayTexture1 = sIncludePath + "/v9 eyebrows thin.png";
//var overlayTexture1 = sIncludePath + "/v9 eyebrows thick.png";

var overlayTexture2 = sIncludePath + "/g9 eyeliner thin.png";
//var overlayTexture2 = sIncludePath + "/g9 eyeliner thick.png";

(function() {

     function combineImages(aImageList) {
        var width = nTextureWidth, height = nTextureHeight;
        var format = 5; // 5 = RGBA format typically

        if (aImageList.length < 2) {
            print("ERROR: No images to combine.");
            return;
        }

        // var oImageA = new Image(width, height, format);
        // var blank = Color(0, 0, 0, 0);
        // oImageA.fill(blank);

        var oImageA = new Image();
        if (!oImageA.load(aImageList[0])) {
            print("ERROR: Failed to load image: " + aImageList[0]);
            return;
        }

        for (var i = 1; i < aImageList.length; i++) {
            var oImageB = new Image();
            print("DEBUG: Loading component image: " + aImageList[i]);
            if (oImageB.load(aImageList[i])) {
                // Scale if needed
                if (oImageA.size != oImageB.size) {
                    oImageB = oImageB.smoothScale(oImageA.size);
                }
                // Composite B over A
                oImageA = oImageB.compositeOver(oImageA);
            } else {
                print("ERROR: Failed to load image: " + aImageList[i]);
            }
            oImageB.deleteLater();
        }

        return oImageA;
    }

    function main() {
        // default 4096x4096 texture resolution
        var nTextureWidth = 4096;
        var nTextureHeight = 4096;
        var sOutputFilename = null;

        var oNode = Scene.getPrimarySelection();
        if (!oNode || !oNode.inherits("DzFigure")) {
            print("No figure selected or selected node is not a DzFigure.");
            return;
        }

        var oFigure = oNode;

        var oObject = oFigure.getObject();
        if (!oObject) {
            print("Selected figure has no object.");
            return;
        }

        var oShape = oObject.getCurrentShape();
        if (!oShape) {
            print("Selected figure has no shape.");
            return;
        }

        // Find "Head" material
        var headMaterial = null;
        for (var i = 0; i < oShape.getNumMaterials(); i++) {
            var mat = oShape.getMaterial(i);
            if (mat && mat.getName() == "Head") {
                headMaterial = mat;
                break;
            }
        }

        if (!headMaterial) {
            print("No 'Head' material found on this figure.");
            return;
        }

        // Get the Diffuse Color property
        var diffuseProp = headMaterial.findProperty("Diffuse Color");
        if (!diffuseProp) {
            print("Head material has no Diffuse Color image property.");
            return;
        }

        var originalMapFilename = "";
        var originalMap = diffuseProp.getMapValue();
        if (!originalMap) {
    //        print("No original diffuse texture map found. Using a blank base.");
            print("ERROR: no original diffuse texture map found. Exiting.");
            return;
        } else {
            originalMap.getPreviewPixmap(1, 1);
            originalMapFilename = originalMap.getFilename();
            print("Original diffuse texture map: " + originalMapFilename);
        }

        // Build the list of images to combine
        var aImagesToCombine = [];

        // If we have an original map, use it as a base
        if (originalMap && originalMapFilename != "") {
            aImagesToCombine.push(originalMapFilename);
        } else {
            print("ERROR: No original diffuse texture map found. Exiting.");
            return;
        }

        // Add overlays
        aImagesToCombine.push(overlayTexture1);
        aImagesToCombine.push(overlayTexture2);

        var combinedImage = combineImages(aImagesToCombine);

        // Save the output
        var sDazTempFolder = App.getTempPath();
        var sTempStemFilename = App.getTempFilename() + "_combined_head_diffuse_with_overlays.png"
        sOutputFilename = sTempStemFilename;
        combinedImage.save(sOutputFilename);
        combinedImage.deleteLater();

        // Set the new texture map
        diffuseProp.setMap(sOutputFilename);
        newImage = diffuseProp.getMapValue();
        newImage.getPreviewPixmap(1, 1);

        print("New combined diffuse texture applied to 'Head' material: " + sOutputFilename);
        print("Script completed.");

    }

    main();

})();
